//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonHandLeft;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonHandRight;
        
        private static SteamVR_Action_Single p_default_TriggerPull;
        
        private static SteamVR_Action_Boolean p_default_TriggerClick;
        
        private static SteamVR_Action_Boolean p_default_AClick;
        
        private static SteamVR_Action_Boolean p_default_BClick;
        
        private static SteamVR_Action_Vector2 p_default_ThumbstickPos;
        
        private static SteamVR_Action_Boolean p_default_ThumbstickClick;
        
        private static SteamVR_Action_Boolean p_default_DPadRight;
        
        private static SteamVR_Action_Boolean p_default_DPadLeft;
        
        private static SteamVR_Action_Boolean p_default_DPadUp;
        
        private static SteamVR_Action_Boolean p_default_DPadDown;
        
        private static SteamVR_Action_Boolean p_default_Grip;
        
        private static SteamVR_Action_Single p_default_GripPull;
        
        private static SteamVR_Action_Vibration p_default_Haptics;
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonHandLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonHandLeft.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonHandRight
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonHandRight.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_TriggerPull
        {
            get
            {
                return SteamVR_Actions.p_default_TriggerPull.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_TriggerClick
        {
            get
            {
                return SteamVR_Actions.p_default_TriggerClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_AClick
        {
            get
            {
                return SteamVR_Actions.p_default_AClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_BClick
        {
            get
            {
                return SteamVR_Actions.p_default_BClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_ThumbstickPos
        {
            get
            {
                return SteamVR_Actions.p_default_ThumbstickPos.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_ThumbstickClick
        {
            get
            {
                return SteamVR_Actions.p_default_ThumbstickClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_DPadRight
        {
            get
            {
                return SteamVR_Actions.p_default_DPadRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_DPadLeft
        {
            get
            {
                return SteamVR_Actions.p_default_DPadLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_DPadUp
        {
            get
            {
                return SteamVR_Actions.p_default_DPadUp.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_DPadDown
        {
            get
            {
                return SteamVR_Actions.p_default_DPadDown.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Grip
        {
            get
            {
                return SteamVR_Actions.p_default_Grip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single default_GripPull
        {
            get
            {
                return SteamVR_Actions.p_default_GripPull.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptics
        {
            get
            {
                return SteamVR_Actions.p_default_Haptics.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonHandLeft,
                    SteamVR_Actions.default_SkeletonHandRight,
                    SteamVR_Actions.default_TriggerPull,
                    SteamVR_Actions.default_TriggerClick,
                    SteamVR_Actions.default_AClick,
                    SteamVR_Actions.default_BClick,
                    SteamVR_Actions.default_ThumbstickPos,
                    SteamVR_Actions.default_ThumbstickClick,
                    SteamVR_Actions.default_DPadRight,
                    SteamVR_Actions.default_DPadLeft,
                    SteamVR_Actions.default_DPadUp,
                    SteamVR_Actions.default_DPadDown,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_GripPull,
                    SteamVR_Actions.default_Haptics};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonHandLeft,
                    SteamVR_Actions.default_SkeletonHandRight,
                    SteamVR_Actions.default_TriggerPull,
                    SteamVR_Actions.default_TriggerClick,
                    SteamVR_Actions.default_AClick,
                    SteamVR_Actions.default_BClick,
                    SteamVR_Actions.default_ThumbstickPos,
                    SteamVR_Actions.default_ThumbstickClick,
                    SteamVR_Actions.default_DPadRight,
                    SteamVR_Actions.default_DPadLeft,
                    SteamVR_Actions.default_DPadUp,
                    SteamVR_Actions.default_DPadDown,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_GripPull};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptics};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptics};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_TriggerClick,
                    SteamVR_Actions.default_AClick,
                    SteamVR_Actions.default_BClick,
                    SteamVR_Actions.default_ThumbstickClick,
                    SteamVR_Actions.default_DPadRight,
                    SteamVR_Actions.default_DPadLeft,
                    SteamVR_Actions.default_DPadUp,
                    SteamVR_Actions.default_DPadDown,
                    SteamVR_Actions.default_Grip};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_TriggerPull,
                    SteamVR_Actions.default_GripPull};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.default_ThumbstickPos};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonHandLeft,
                    SteamVR_Actions.default_SkeletonHandRight};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_TriggerPull,
                    SteamVR_Actions.default_TriggerClick,
                    SteamVR_Actions.default_AClick,
                    SteamVR_Actions.default_BClick,
                    SteamVR_Actions.default_ThumbstickPos,
                    SteamVR_Actions.default_ThumbstickClick,
                    SteamVR_Actions.default_DPadRight,
                    SteamVR_Actions.default_DPadLeft,
                    SteamVR_Actions.default_DPadUp,
                    SteamVR_Actions.default_DPadDown,
                    SteamVR_Actions.default_Grip,
                    SteamVR_Actions.default_GripPull};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonHandLeft = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonHandLeft")));
            SteamVR_Actions.p_default_SkeletonHandRight = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonHandRight")));
            SteamVR_Actions.p_default_TriggerPull = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/TriggerPull")));
            SteamVR_Actions.p_default_TriggerClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/TriggerClick")));
            SteamVR_Actions.p_default_AClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/AClick")));
            SteamVR_Actions.p_default_BClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/BClick")));
            SteamVR_Actions.p_default_ThumbstickPos = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/ThumbstickPos")));
            SteamVR_Actions.p_default_ThumbstickClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/ThumbstickClick")));
            SteamVR_Actions.p_default_DPadRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/DPadRight")));
            SteamVR_Actions.p_default_DPadLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/DPadLeft")));
            SteamVR_Actions.p_default_DPadUp = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/DPadUp")));
            SteamVR_Actions.p_default_DPadDown = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/DPadDown")));
            SteamVR_Actions.p_default_Grip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Grip")));
            SteamVR_Actions.p_default_GripPull = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/GripPull")));
            SteamVR_Actions.p_default_Haptics = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptics")));
        }
    }
}
